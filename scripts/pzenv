#!/bin/bash

NAME='pzst'

BIN='/usr/local/bin'
LOGFILE="/var/log/${NAME}.log"
PYTHON='/usr/bin/python'

PZSERVER="${HOME}/pzserver"
PZLAUNCHER="${PZSERVER}/start-server.sh"

CACHEDIR="/var/cache/${NAME}"
CACHEFILE='cache.json'
CACHE="${CACHEDIR}/${CACHEFILE}"

CONFIGDIR="/etc/${NAME}"
CONFIGFILE="config.json"
CONFIG="${CONFIGDIR}/${CONFIGFILE}"

CRONDIR="/etc/cron.d"
CRONFILE="${CRONDIR}/${NAME}"

ENV="${CONFIGDIR}/env"
LOCK="${CACHEDIR}/lock"
PZSERVERLOG="${PZSERVER}/pzserver.log"
KILLSWITCH="${CACHEDIR}/kill.${USER}"
RESTARTSWITCH="${CACHEDIR}/restart.${USER}"

STEAM="${HOME}/Steam"
STEAMCMD="${STEAM}/steamcmd.sh"
STEAMCMDARCHIVE='steamcmd_linux.tar.gz'
STEAMCMDARCHIVEPATH="/tmp/${STEAMCMDARCHIVE}"
STEAMCMD_URL="https://steamcdn-a.akamaihd.net/client/installer/${STEAMCMDARCHIVE}"

ZOMBOIDSERVERDIR="${HOME}/Zomboid/Server"
ZOMBOIDSERVERCONFIG="${ZOMBOIDSERVERDIR}/servertest.ini"
ZOMBOIDSERVERSANDBOX="${ZOMBOIDSERVERDIR}/servertest_SandboxVars.lua"
ZOMBOIDSERVERSPAWNPOINTS="${ZOMBOIDSERVERDIR}/servertest_spawnpoints.lua"
ZOMBOIDSERVERSPAWNREGIONS="${ZOMBOIDSERVERDIR}/servertest_spawnregions.lua"

if [ -f "${CONFIG}" ]; then
	EDITOR="$(jq -r .editor "${CONFIG}")"
	if [ "${EDITOR}" = "null" ]; then
		EDITOR='nano'
	fi
fi

install_steamcmd() {

	if ! [ -d "${STEAM}" ] || ! [ -f "${STEAMCMD}" ]; then
		mkdir -p ${STEAM}
		wget -q -O "${STEAMCMDARCHIVEPATH}" "${STEAMCMD_URL}"
		tar xf "${STEAMCMDARCHIVEPATH}" -C "${STEAM}"
		rm -f "${STEAMCMDARCHIVEPATH}"
	fi
}

check_first_time() {

	DB="/home/${USER}/Zomboid/db/"
	if ! [ -d "${DB}" ]; then

		# Ask for sudo password before printing anything to the console
		sudo -n echo

		rm -f "${PZSERVERLOG}"

		while true; do
			echo Enter new administrator password \(will not be echoed\):
			read -s PASSWD
			echo
			echo Confirm the password:
			read -s CONFIRM

			if [ "${PASSWD}" == "${CONFIRM}" ]; then
				break
			fi

			echo The passwords don\'t match, please try again
			echo
		done
	fi
}

wait_log_entry() {

	LOGENTRY="${1}"
	while true; do

		if [ -f "${PZSERVERLOG}" ]; then

			READY=$(grep "${LOGENTRY}" "${PZSERVERLOG}")
			if ! [ -z "${READY}" ]; then
				break
			fi
		fi

		sleep 1
	done
}

input_admin_password() {

	if ! [ -z "${PASSWD}" ]; then

		wait_log_entry 'Enter new administrator password:'

		PID=$(get_pz_pid)

		sudo ioctl "${PID}" "${PASSWD}"

		wait_log_entry 'Confirm the password:'

		sudo ioctl "${PID}" "${PASSWD}"
	fi
}

check_running() {

	PID=$(get_pz_pid)
	if ! [ -z "${PID}" ]; then
			echo pzserver is already running.
			exit
	fi
}

search_pz() {

	SERVER="${1}"
	if [ -z "${SERVER}" ]; then
		SERVER="${USER}"
	fi

	while read PROC; do

		grep -l 'ProjectZomboid\(32\|64\)' "${PROC}/cmdline" 2> /dev/null | cut -f3 -d/

	done < <(find /proc -maxdepth 1 -type d -user "${SERVER}")
}

get_pz_pid() {

	PIDS=$(search_pz)
	for PID in ${PIDS[@]}; do

		LINK="$(readlink "/proc/${PID}/fd/0")"
		if [ "${LINK}" != "/dev/null" ]; then
			echo $PID
		fi

	done
}
