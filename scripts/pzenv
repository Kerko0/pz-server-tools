#!/bin/bash

NAME='pzst'

BIN='/usr/local/bin'
LOGFILE="/var/log/${NAME}.log"
PYTHON='/usr/bin/python'

CACHEDIR="/var/cache/${NAME}"
CACHEFILE='cache.json'
CACHE="${CACHEDIR}/${CACHEFILE}"

CONFIGDIR="/etc/${NAME}"
CONFIGENV="${CONFIGDIR}/env"
CONFIGFILE="config.json"
CONFIG="${CONFIGDIR}/${CONFIGFILE}"

CRONDIR="/etc/cron.d"
CRONFILE="${CRONDIR}/${NAME}"

LOCK="${CACHEDIR}/lock"
KILLSWITCH="${CACHEDIR}/kill.${USER}"
RESTARTSWITCH="${CACHEDIR}/restart.${USER}"
INSTALLCHECK="${CONFIGDIR}/.installed"
SOCKETPATH="${CACHEDIR}/pzst.sock"

STEAM="${HOME}/Steam"
STEAMCMD="${STEAM}/steamcmd.sh"
STEAMCMDARCHIVE='steamcmd_linux.tar.gz'
STEAMCMDARCHIVEPATH="/tmp/${STEAMCMDARCHIVE}"
STEAMCMD_URL="https://steamcdn-a.akamaihd.net/client/installer/${STEAMCMDARCHIVE}"

ZOMBOID="${HOME}/Zomboid"
PZSERVER="${HOME}/pzserver"
PZSERVERDIR="${ZOMBOID}/Server"
PZSERVERLOG="${ZOMBOID}/server-console.txt"
PZSERVERSAVE="${ZOMBOID}/Saves/Multiplayer"
PZSERVERBACKUP="${ZOMBOID}/Backups"
PZSERVERCONFIG="${PZSERVERDIR}/servertest.ini"
PZSERVERSTART="${PZSERVER}/start-server.sh"
PZSERVERSANDBOX="${PZSERVERDIR}/servertest_SandboxVars.lua"
PZSERVERSPAWNPOINTS="${PZSERVERDIR}/servertest_spawnpoints.lua"
PZSERVERSPAWNREGIONS="${PZSERVERDIR}/servertest_spawnregions.lua"

JAVAMODSVERSION=0.0.1
JAVAMODSARCHIVE="javamods-${JAVAMODSVERSION}.zip"
JAVAMODSCONFIGDIR="${HOME}/.javamods"
JAVAMODSCONFIG="${JAVAMODSCONFIGDIR}/config.json"
JAVAMODSSTART="${PZSERVER}/javamods-start-server.sh"
JAVAMODSCONSOLE="${ZOMBOID}/javamods-console.txt"
JAVAMODSURL="https://github.com/quarantin/javamods/releases/download/${JAVAMODSVERSION}/${JAVAMODSARCHIVE}"

if [ -f "${CONFIG}" ]; then
	EDITOR="$(jq -r .editor "${CONFIG}")"
	if [ "${EDITOR}" = "null" ]; then
		EDITOR='nano'
	fi
fi

if [ -f "${JAVAMODSCONFIG}" ] && [ -f "${JAVAMODSSTART}" ]; then
	ENABLEJAVAMODS="$(jq -r '.javamods' "${JAVAMODSCONFIG}")"
	if [ "${ENABLEJAVAMODS}" = 'true' ] ; then
		PZSERVERSTART="${JAVAMODSSTART}"
	fi
fi

install_steamcmd() {

	if ! [ -d "${STEAM}" ] || ! [ -f "${STEAMCMD}" ]; then
		mkdir -p ${STEAM}
		wget -q -O "${STEAMCMDARCHIVEPATH}" "${STEAMCMD_URL}"
		tar xf "${STEAMCMDARCHIVEPATH}" -C "${STEAM}"
		rm -f "${STEAMCMDARCHIVEPATH}"
	fi
}

read_adminuser() {

	DEFAULT_ADMINUSER='pzadmin'
	echo Enter new administrator username \(default: ${DEFAULT_ADMINUSER}\)
	read -e ADMINUSER

	if [ -z "${ADMINUSER}" ]; then
		ADMINUSER="${DEFAULT_ADMINUSER}"
	fi

	export ADMINUSEROPTION="-adminusername ${ADMINUSER}"
}

read_adminpasswd() {

	while true; do

		echo
		echo Enter new administrator password \(will not be echoed\):
		read -s ADMINPASSWD

		echo
		echo Confirm the password:
		read -s CONFIRMADMINPASSWD

		if [ -z "${ADMINPASSWD}" ]; then
			echo
			echo Empty passwords are not allowed!
			continue

		elif [ "${ADMINPASSWD}" = "${CONFIRMADMINPASSWD}" ]; then
			export ADMINPASSWDOPTION="-adminpassword ${ADMINPASSWD}"
			break
		fi

		echo
		echo The passwords don\'t match, please try again

	done
}

read_port() {

	DEFAULT_PORT='16261'
	while true; do

		echo
		echo Select Port \(default: ${DEFAULT_PORT}\):
		read -e PORT

		if [ -z "${PORT}" ]; then
			PORT="${DEFAULT_PORT}"
		fi

		OUTPUT=$(ss -nluw | grep ":${PORT} ")
		if [ -z "${OUTPUT}" ]; then
			export PORT="${PORT}"
			export PORTOPTION="-port ${PORT}"
			break
		fi

		echo The port ${PORT} is already in use, please select another port
	done
}

check_first_time() {

	if ! [ -d "${PZSERVERDIR}" ]; then

		read_adminuser

		read_adminpasswd

		read_port
	fi
}

check_running() {

	PZPID=$(get_pz_pid)
	if [ -z "${PZPID}" ]; then
		echo No running pzserver found
		exit
	fi
}

check_not_running() {

	PZPID=$(get_pz_pid)
	if ! [ -z "${PZPID}" ]; then
		echo pzserver already running.
		exit
	fi
}

search_pz_pid() {

	while read PROC; do

		grep -l 'ProjectZomboid' "${PROC}/comm" 2> /dev/null | cut -f3 -d/

	done < <(find /proc -maxdepth 1 -type d -user "${USER}")
}

get_pz_pid() {

	PIDS=$(search_pz_pid)
	for PID in ${PIDS[@]}; do

		LINK="$(readlink "/proc/${PID}/fd/0")"
		if [ "${LINK}" != '/dev/null' ]; then
			echo $PID
		fi

	done
}
